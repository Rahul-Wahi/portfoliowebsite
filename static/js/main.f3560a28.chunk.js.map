{"version":3,"sources":["components/landingpage.js","components/aboutme.js","components/contact.js","components/projects.js","components/education.js","components/experience.js","components/resume.js","components/skills.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["Landing","document","title","style","width","margin","className","col","href","rel","target","aria-hidden","Component","About","Contact","src","alt","height","paddingTop","fontSize","fontFamily","Projects","props","state","activeTab","window","open","this","class","shadow","minWidth","border","onClick","routeToPJ2","colored","routeToPJ3","routeToPJ1","routeToPJ4","routeToPJ5","routeToPJ6","routeToPJ7","routeToPJ8","routeToPJ9","onChange","tabId","setState","ripple","toggleCategories","Education","startYear","endYear","marginTop","schoolName","schoolDescription","Experience","jobName","jobDescription","Resume","textAlign","color","borderTop","Main","exact","path","component","LandingPage","AboutMe","App","to","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0NAqCeA,E,kLAhCXC,SAASC,MAAQ,kB,+BAGjB,OACE,yBAAKC,MAAO,CAACC,MAAO,OAAQC,OAAQ,SACpC,kBAAC,OAAD,CAAMC,UAAU,gBAChB,kBAAC,OAAD,CAAMC,IAAK,IACX,yBAAKD,UAAU,eACf,oDACA,6BACA,mIACA,iFACA,yBAAKA,UAAU,gBAGjB,uBAAGE,KAAK,sDAAsDC,IAAI,sBAAsBC,OAAO,UAC7F,uBAAGJ,UAAU,wBAAwBK,cAAY,UAInD,uBAAGH,KAAK,mCAAmCC,IAAI,sBAAsBC,OAAO,UAC1E,uBAAGJ,UAAU,sBAAsBK,cAAY,mB,GAvB/BC,aCWPC,E,uKATX,OACE,yBAAKP,UAAU,gBAAf,8FAEF,6BAFE,gS,GAHcM,aC2CLE,E,uKAxCX,OACE,yBAAKR,UAAU,gBACb,kBAAC,OAAD,CAAMA,UAAU,gBACd,kBAAC,OAAD,CAAMC,IAAK,GACT,6CACA,yBACEQ,IAAI,uEACJC,IAAI,SACJb,MAAO,CAACc,OAAQ,WAEjB,uBAAGd,MAAO,CAAEC,MAAO,MAAOC,OAAQ,OAAQa,WAAY,QAAtD,uXAGH,kBAAC,OAAD,CAAMX,IAAK,GACT,0CACA,6BAEA,yBAAKD,UAAU,gBACb,kBAAC,OAAD,KACE,kBAAC,WAAD,KACE,kBAAC,kBAAD,CAAiBH,MAAO,CAACgB,SAAU,OAAQC,WAAY,UACrD,uBAAGd,UAAU,qBAAqBK,cAAY,SADhD,mBAKF,kBAAC,WAAD,KACE,kBAAC,kBAAD,CAAiBR,MAAO,CAACgB,SAAU,OAAQC,WAAY,UACrD,uBAAGd,UAAU,iBAAiBK,cAAY,SAD5C,qC,GA5BIC,aC0RPS,E,kDAzRb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,UAAW,GAFT,E,yDAMnBC,OAAOC,KAAK,0F,mCAIVD,OAAOC,KAAK,+E,mCAIVD,OAAOC,KAAK,sF,yCAGI,IAAD,OAEjB,OAA4B,IAAzBC,KAAKJ,MAAMC,UAEV,yBAAKI,MAAM,qBACX,yBAAKA,MAAM,QACX,yBAAKtB,UAAU,iBAEf,kBAAC,OAAD,CAAMuB,OAAQ,EAAG1B,MAAO,CAAC2B,SAAU,MAAOzB,OAAQ,SAChD,kBAAC,YAAD,KAAW,oEACX,kBAAC,WAAD,CAAUF,MAAO,CAAC,aAAc,YAAhC,sLAEA,6BACA,6BAEA,0BAAMyB,MAAM,iBAAZ,aALA,OAOA,0BAAMA,MAAM,cAAZ,QAPA,OASA,0BAAMA,MAAM,gBAAZ,UATA,OAWA,0BAAMA,MAAM,iBAAZ,gBACA,6BACA,6BACA,0BAAMA,MAAM,cAAZ,aAEA,kBAAC,cAAD,CAAaG,QAAM,GACjB,kBAAC,SAAD,CAAQC,QAAS,kBAAI,EAAKC,cAAcC,SAAO,GAA/C,YAIF,kBAAC,OAAD,CAAML,OAAQ,EAAG1B,MAAO,CAAC2B,SAAU,MAAOzB,OAAQ,SAChD,kBAAC,YAAD,KAAW,uEACX,kBAAC,WAAD,CAAUF,MAAO,CAAC,aAAc,YAAhC,oLAEA,6BACA,6BAEA,0BAAMyB,MAAM,iBAAZ,cALA,OAOA,0BAAMA,MAAM,cAAZ,cAPA,OASA,0BAAMA,MAAM,gBAAZ,UATA,OAWA,0BAAMA,MAAM,iBAAZ,QACA,6BACA,6BACA,0BAAMA,MAAM,cAAZ,WAGA,kBAAC,cAAD,CAAaG,QAAM,GACjB,kBAAC,SAAD,CAAQC,QAAS,kBAAI,EAAKG,cAAcD,SAAO,GAA/C,YAIJ,kBAAC,OAAD,CAAML,OAAQ,EAAG1B,MAAO,CAAC2B,SAAU,MAAOzB,OAAQ,SAChD,kBAAC,YAAD,KAAW,2EACX,kBAAC,WAAD,CAAUF,MAAO,CAAC,aAAc,YAAhC,6LAEA,6BACA,6BAEA,0BAAMyB,MAAM,iBAAZ,OALA,OAOA,0BAAMA,MAAM,cAAZ,cAPA,OASA,0BAAMA,MAAM,gBAAZ,aATA,OAWA,0BAAMA,MAAM,iBAAZ,QACA,6BACA,6BACA,0BAAMA,MAAM,cAAZ,QAGA,kBAAC,cAAD,CAAaG,QAAM,GACjB,kBAAC,SAAD,CAAQC,QAAS,kBAAI,EAAKI,cAAcF,SAAO,GAA/C,cAMJ,6BACA,6BAEA,yBAAKN,MAAM,QACX,yBAAKtB,UAAU,iBAEb,kBAAC,OAAD,CAAMuB,OAAQ,EAAG1B,MAAO,CAAC2B,SAAU,MAAOzB,OAAQ,SAChD,kBAAC,YAAD,KAAW,sGACX,kBAAC,WAAD,CAAUF,MAAO,CAAC,aAAc,YAAhC,mKAEA,6BACA,6BAEA,0BAAMyB,MAAM,iBAAZ,cALA,OAOA,0BAAMA,MAAM,cAAZ,QAPA,OASA,0BAAMA,MAAM,gBAAZ,kBATA,OAWA,0BAAMA,MAAM,iBAAZ,UACA,6BACA,6BACA,0BAAMA,MAAM,cAAZ,uBAEA,kBAAC,cAAD,CAAaG,QAAM,GACjB,kBAAC,SAAD,CAAQC,QAAS,kBAAI,EAAKK,cAAcH,SAAO,GAA/C,YAIJ,kBAAC,OAAD,CAAML,OAAQ,EAAG1B,MAAO,CAAC2B,SAAU,MAAOzB,OAAQ,SAChD,kBAAC,YAAD,KAAW,qFACX,kBAAC,WAAD,CAAUF,MAAO,CAAC,aAAc,YAAhC,oJAEA,6BACA,6BAEA,0BAAMyB,MAAM,iBAAZ,WALA,OAOA,0BAAMA,MAAM,cAAZ,WAPA,OASA,0BAAMA,MAAM,gBAAZ,UATA,OAWA,0BAAMA,MAAM,iBAAZ,SACA,6BACA,6BACA,0BAAMA,MAAM,cAAZ,UAEA,kBAAC,cAAD,CAAaG,QAAM,GACjB,kBAAC,SAAD,CAAQC,QAAS,kBAAI,EAAKM,cAAcJ,SAAO,GAA/C,YAIJ,kBAAC,OAAD,CAAML,OAAQ,EAAG1B,MAAO,CAAC2B,SAAU,MAAOzB,OAAQ,SAChD,kBAAC,YAAD,KAAW,sEACX,kBAAC,WAAD,CAAUF,MAAO,CAAC,aAAc,YAAhC,2KAEA,6BACA,6BAEA,0BAAMyB,MAAM,iBAAZ,QALA,OAOA,0BAAMA,MAAM,cAAZ,kBAPA,OASA,0BAAMA,MAAM,iBAAZ,mBACA,6BACA,8BAGA,kBAAC,cAAD,CAAaG,QAAM,GACjB,kBAAC,SAAD,CAAQC,QAAS,kBAAI,EAAKO,cAAcL,SAAO,GAA/C,cAKJ,6BACA,6BACA,yBAAKN,MAAM,QACX,yBAAKtB,UAAU,iBACb,kBAAC,OAAD,CAAMuB,OAAQ,EAAG1B,MAAO,CAAC2B,SAAU,MAAOzB,OAAQ,SAChD,kBAAC,YAAD,KAAY,2FACZ,kBAAC,WAAD,CAAUF,MAAO,CAAC,aAAc,YAAhC,kIAEA,6BACA,6BAEA,0BAAMyB,MAAM,iBAAZ,UALA,OAOA,0BAAMA,MAAM,cAAZ,YAPA,OASA,0BAAMA,MAAM,gBAAZ,aATA,OAWA,6BACA,6BACA,0BAAMA,MAAM,cAAZ,uBAEA,kBAAC,cAAD,CAAaG,QAAM,GACjB,kBAAC,SAAD,CAAQC,QAAS,kBAAI,EAAKQ,cAAcN,SAAO,GAA/C,YAGF,kBAAC,OAAD,CAAML,OAAQ,EAAG1B,MAAO,CAAC2B,SAAU,MAAOzB,OAAQ,SAChD,kBAAC,YAAD,KAAW,iGACX,kBAAC,WAAD,CAAUF,MAAO,CAAC,aAAc,YAAhC,yIAEA,6BACA,6BAEA,0BAAMyB,MAAM,iBAAZ,YALA,OAOA,0BAAMA,MAAM,cAAZ,cAPA,OASA,0BAAMA,MAAM,gBAAZ,mBATA,OAWA,6BACA,6BACA,0BAAMA,MAAM,cAAZ,uBAEA,kBAAC,cAAD,CAAaG,QAAM,GACjB,kBAAC,SAAD,CAAQC,QAAS,kBAAI,EAAKS,cAAcP,SAAO,GAA/C,YAGJ,kBAAC,OAAD,CAAML,OAAQ,EAAG1B,MAAO,CAAC2B,SAAU,MAAOzB,OAAQ,SAChD,kBAAC,YAAD,KAAW,0FACX,kBAAC,WAAD,CAAUF,MAAO,CAAC,aAAc,YAAhC,kHAEA,6BACA,6BAEA,0BAAMyB,MAAM,iBAAZ,YALA,OAOA,0BAAMA,MAAM,cAAZ,cAPA,OASA,0BAAMA,MAAM,gBAAZ,mBATA,OAWA,6BACA,6BACA,0BAAMA,MAAM,cAAZ,uBAEA,kBAAC,cAAD,CAAaG,QAAM,GACjB,kBAAC,SAAD,CAAQC,QAAS,kBAAI,EAAKU,cAAcR,SAAO,GAA/C,eAOmB,IAAzBP,KAAKJ,MAAMC,UAEjB,6BAAK,gDAE0B,IAAzBG,KAAKJ,MAAMC,UAEjB,6BAAK,8CAE0B,IAAzBG,KAAKJ,MAAMC,UAEjB,6BAAK,qDAFF,I,+BAUC,IAAD,OACP,OACE,6BACE,kBAAC,OAAD,CAAMA,UAAWG,KAAKJ,MAAMC,UAAWmB,SAAU,SAACC,GAAD,OAAW,EAAKC,SAAS,CAAErB,UAAWoB,KAAUE,QAAM,GACrG,kBAAC,MAAD,kBAIA,kBAAC,OAAD,KACE,kBAAC,OAAD,CAAMvC,IAAK,IACT,yBAAKD,UAAU,WAAWqB,KAAKoB,2B,GAhRtBnC,aCeRoC,E,uKAdX,OACE,kBAAC,OAAD,KACE,kBAAC,OAAD,CAAMzC,IAAK,GACT,2BAAIoB,KAAKL,MAAM2B,UAAf,MAA6BtB,KAAKL,MAAM4B,UAE1C,kBAAC,OAAD,CAAM3C,IAAK,GACT,wBAAIJ,MAAO,CAACgD,UAAU,QAASxB,KAAKL,MAAM8B,YAC1C,2BAAIzB,KAAKL,MAAM+B,yB,GATDzC,aCgBT0C,E,uKAdX,OACE,kBAAC,OAAD,KACE,kBAAC,OAAD,CAAM/C,IAAK,GACT,2BAAIoB,KAAKL,MAAM2B,UAAf,MAA6BtB,KAAKL,MAAM4B,UAE1C,kBAAC,OAAD,CAAM3C,IAAK,GACT,wBAAIJ,MAAO,CAACgD,UAAU,QAASxB,KAAKL,MAAMiC,SAC1C,2BAAI5B,KAAKL,MAAMkC,sB,GATA5C,aC+IV6C,GC/IM7C,Y,uKDMjB,OACE,6BACE,kBAAC,OAAD,KACE,kBAAC,OAAD,CAAML,IAAK,GACT,yBAAKJ,MAAO,CAACuD,UAAW,WACtB,yBACE3C,IAAI,uEACJC,IAAI,SACJb,MAAO,CAACc,OAAQ,YAIpB,wBAAId,MAAO,CAACe,WAAY,QAAxB,iBACA,wBAAIf,MAAO,CAACwD,MAAO,SAAnB,sBACA,wBAAIxD,MAAO,CAACyD,UAAW,oBAAqBxD,MAAO,SACnD,2BAAG,8CACH,6BACA,2BACA,gJAEZ,6BAFY,2GAKZ,6BALY,gEAQZ,6BARY,uFAUZ,6BAVY,8DAYZ,6BAZY,6JAgBA,wBAAID,MAAO,CAACyD,UAAW,oBAAqBxD,MAAO,SACnD,uCACA,yEACA,qCACA,6CACA,qCACA,sDACA,mCACA,gFACA,wBAAID,MAAO,CAACyD,UAAW,oBAAqBxD,MAAO,UAErD,kBAAC,OAAD,CAAME,UAAU,mBAAmBC,IAAK,GACtC,yCAGA,kBAAC,EAAD,CACE0C,UAAW,KACXC,QAAS,KACTE,WAAW,+CACXC,kBAAkB,yFAGjB,kBAAC,EAAD,CACEJ,UAAW,KACXC,QAAS,KACTE,WAAW,iDACXC,kBAAkB,kGAEnB,wBAAIlD,MAAO,CAACyD,UAAW,uBAEzB,0CAEF,kBAAC,EAAD,CACEX,UAAW,KACXC,QAAS,KACTK,QAAQ,6DACRC,eAAe,m5BAQf,kBAAC,EAAD,CACEP,UAAW,KACXC,QAAS,KACTK,QAAQ,2DACRC,eAAe,0xCAYD,kBAAC,EAAD,CACEP,UAAW,KACXC,QAAS,KACTK,QAAQ,iDACRC,eAAe,y+BAQjC,wBAAIrD,MAAO,CAACyD,UAAW,uBACvB,gDACA,mDA/DJ,yCAgEI,6BACA,6BAEd,gDAnEU,0MAoEV,6BACA,6BAEA,yCAvEU,uEAwEV,6BACA,6BAEA,iEA3EU,qEA4EV,6BACA,6BAEA,gDA/EU,oEAgFV,6BACA,6BAEA,iDAnFU,6B,GA/CWhD,cEaNiD,EAVF,kBACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWC,IACjD,kBAAC,IAAD,CAAOF,KAAK,4BAA4BC,UAAWE,IACnD,kBAAC,IAAD,CAAOH,KAAK,4BAA4BC,UAAWlD,IACnD,kBAAC,IAAD,CAAOiD,KAAK,6BAA6BC,UAAW3C,IACpD,kBAAC,IAAD,CAAO0C,KAAK,2BAA2BC,UAAWP,M,QCkBvCU,MA5Bf,WACE,OACE,yBAAK7D,UAAU,oBACX,kBAAC,SAAD,KACI,kBAAC,SAAD,CAAQA,UAAU,eAAeJ,MAAM,iBACnC,kBAAC,aAAD,KACI,kBAAC,IAAD,CAAMkE,GAAG,4BAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,8BAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,6BAAT,WACA,kBAAC,IAAD,CAAMA,GAAG,qBAAT,UAGR,kBAAC,SAAD,CAAQlE,MAAM,cACV,kBAAC,aAAD,KACA,kBAAC,IAAD,CAAMkE,GAAG,4BAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,8BAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,6BAAT,aAGJ,kBAAC,UAAD,KACI,yBAAK9D,UAAU,iBACf,kBAAC,EAAD,UCfI+D,QACW,cAA7B5C,OAAO6C,SAASC,UAEe,UAA7B9C,OAAO6C,SAASC,UAEhB9C,OAAO6C,SAASC,SAASC,MACvB,2D,aCTNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFzE,SAAS0E,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.f3560a28.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, Cell} from 'react-mdl';\r\n\r\nclass Landing extends Component {\r\n  componentDidMount(){\r\n    document.title = \"Saurabh Anand\"\r\n  }\r\n  render() {\r\n    return(\r\n      <div style={{width: '100%', margin: 'auto'}}>\r\n      <Grid className='landing-grid'>\r\n      <Cell col={12}>\r\n      <div className='banner-text'>\r\n      <h1>Full Stack Developer</h1>\r\n      <hr/>\r\n      <p> Java | Golang | Spring | SpringBoot | JavaScript | React | VueJS | Bootstrap | Cassandra | MongoDB </p>\r\n      <p> Area of Interest : Cloud and Distributed Systems </p>\r\n      <div className=\"social-links\">\r\n\r\n    {/* LinkedIn */}\r\n    <a href=\"https://www.linkedin.com/in/saurabh-anand-29081589/\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n      <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\r\n    </a>\r\n\r\n    {/* Github */}\r\n    <a href=\"https://github.com/anand-saurabh\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n      <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\r\n    </a>\r\n    </div>\r\n    </div>\r\n    </Cell>\r\n    </Grid>\r\n  </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return(\r\n      <div className=\"contact-body\">\r\n    I am a graduate student pursuing my Masters in Computer Science from University of Florida.\r\n    <br></br>\r\n      I have 4 years of work experience in the field of Software Development with expertise in back-end and front-end application development. I was a summer'2020 Senior Senior Engineer Intern at Visa Inc. Prior to my masters, I was working as a Senior Software Engineer at J.C. Penney.</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\nimport { Grid, Cell, List, ListItem, ListItemContent } from 'react-mdl';\r\n\r\n\r\nclass Contact extends Component {\r\n  render() {\r\n    return(\r\n      <div className=\"contact-body\">\r\n        <Grid className=\"contact-grid\">\r\n          <Cell col={6}>\r\n            <h2>Saurabh Anand</h2>\r\n            <img\r\n              src=\"https://cdn2.iconfinder.com/data/icons/avatar-2/512/Fred_man-512.png\"\r\n              alt=\"avatar\"\r\n              style={{height: '250px'}}\r\n               />\r\n             <p style={{ width: '75%', margin: 'auto', paddingTop: '1em'}}>4 years of industrial experience as a Software Developer. My expertise lies in application development using Java, Golang, JavaScript, Big Data Analysis, Cloud Technologies (AWS, etc), Database, and Distributed systems. Well-versed in Computer Science Concepts - Algorithms, Data Structures, Object-Oriented Programming (OOP). Good Analytical and Problem-Solving skills.</p>\r\n\r\n          </Cell>\r\n          <Cell col={6}>\r\n            <h2>Contact Me</h2>\r\n            <hr/>\r\n\r\n            <div className=\"contact-list\">\r\n              <List>\r\n                <ListItem>\r\n                  <ListItemContent style={{fontSize: '30px', fontFamily: 'Anton'}}>\r\n                    <i className=\"fa fa-phone-square\" aria-hidden=\"true\"/>\r\n                    (352) 871-5669\r\n                  </ListItemContent>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemContent style={{fontSize: '30px', fontFamily: 'Anton'}}>\r\n                    <i className=\"fa fa-envelope\" aria-hidden=\"true\"/>\r\n                    saurabh789789@gmail.com\r\n                  </ListItemContent>\r\n                </ListItem>\r\n              </List>\r\n            </div>\r\n          </Cell>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport { Tabs, Tab, Grid, Cell, Card, CardTitle, CardText, CardActions, Button, CardMenu, IconButton } from 'react-mdl';\r\n\r\n\r\nclass Projects extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { activeTab: 0 };\r\n  }\r\n\r\n  routeToPJ1(){\r\n  window.open('https://github.com/anand-saurabh/Movie-Review-UI-Dashboard--JavaScript-Vue-Bootstrap'); //This will open Google in a new\r\n    }\r\n\r\n    routeToPJ2(){\r\n    window.open('    https://github.com/anand-saurabh/Cassandra-SSTable-Generation-Utility'); //This will open Google in a new\r\n      }\r\n\r\n      routeToPJ4(){\r\n      window.open('https://github.com/anand-saurabh/BitTorrent-Application-Using-Socket-Programming'); //This will open Google in a new\r\n      }\r\n\r\n  toggleCategories() {\r\n\r\n    if(this.state.activeTab === 0){\r\n      return(\r\n        <div class=\"top-level-content\">\r\n        <div class=\"row1\">\r\n        <div className=\"projects-grid\">\r\n\r\n        <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\r\n          <CardTitle><b>Cassandra SSTable Generation Utility</b></CardTitle>\r\n          <CardText style={{'text-align': 'justify'}}>\r\n          Implemented a utility to generate SSTables from a existing Cassandra table or a .CSV file. This utility can be used to bulk import millions of data into Cassandra tables directly.\r\n          <br></br>\r\n          <br></br>\r\n\r\n          <span class=\"label success\">Cassandra</span>\r\n          &nbsp;\r\n          <span class=\"label info\">Java</span>\r\n          &nbsp;\r\n          <span class=\"label danger\">Spring</span>\r\n          &nbsp;\r\n          <span class=\"label warning\">Spring Batch</span>\r\n          <br></br>\r\n          <br></br>\r\n          <span class=\"label info\">SSTables</span>\r\n          </CardText>\r\n          <CardActions border>\r\n            <Button onClick={()=>this.routeToPJ2()} colored>GitHub</Button>\r\n            </CardActions>\r\n        </Card>\r\n\r\n          <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\r\n            <CardTitle><b>Application To Track User GitHub Issues</b></CardTitle>\r\n            <CardText style={{'text-align': 'justify'}}>\r\n            Developed REST APIs to talk to GitHub client code and get data for a user based on user's GitHub Ids. The data include number of open issues, issues opened more than 7 days ago.\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <span class=\"label success\">SpringBoot</span>\r\n            &nbsp;\r\n            <span class=\"label info\">Spring MVC</span>\r\n            &nbsp;\r\n            <span class=\"label danger\">Spring</span>\r\n            &nbsp;\r\n            <span class=\"label warning\">Java</span>\r\n            <br></br>\r\n            <br></br>\r\n            <span class=\"label info\">Heroku</span>\r\n            </CardText>\r\n\r\n            <CardActions border>\r\n              <Button onClick={()=>this.routeToPJ3()} colored>GitHub</Button>\r\n              </CardActions>\r\n          </Card>\r\n\r\n          <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\r\n            <CardTitle><b>Movie Review Dashboard with CRUD Operations</b></CardTitle>\r\n            <CardText style={{'text-align': 'justify'}}>\r\n            The movie review dashboard project lets you create, edit, delete or view reviews of movies based on the user roles such as critics. Also, we can search a movie by applying filters in UI.\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <span class=\"label success\">Vue</span>\r\n            &nbsp;\r\n            <span class=\"label info\">JavaScript</span>\r\n            &nbsp;\r\n            <span class=\"label danger\">Bootstrap</span>\r\n            &nbsp;\r\n            <span class=\"label warning\">HTML</span>\r\n            <br></br>\r\n            <br></br>\r\n            <span class=\"label info\">CSS</span>\r\n\r\n            </CardText>\r\n            <CardActions border>\r\n              <Button onClick={()=>this.routeToPJ1()} colored>GitHub</Button>\r\n              </CardActions>\r\n          </Card>\r\n\r\n          </div>\r\n          </div>\r\n          <br></br>\r\n          <br></br>\r\n\r\n          <div class=\"row2\">\r\n          <div className=\"projects-grid\">\r\n            {/* Project 1 */}\r\n            <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\r\n              <CardTitle><b>BitTorrent Application: Distributed and Scalable System Implementation</b></CardTitle>\r\n              <CardText style={{'text-align': 'justify'}}>\r\n              This a implementation of BitTorrent application using socket programming in Java. This uses decentralized P2P communication protocol for sharing data and files.\r\n              <br></br>\r\n              <br></br>\r\n\r\n              <span class=\"label success\">Networking</span>\r\n              &nbsp;\r\n              <span class=\"label info\">Java</span>\r\n              &nbsp;\r\n              <span class=\"label danger\">Multithreading</span>\r\n              &nbsp;\r\n              <span class=\"label warning\">Socket</span>\r\n              <br></br>\r\n              <br></br>\r\n              <span class=\"label info\">Distributed System</span>\r\n              </CardText>\r\n              <CardActions border>\r\n                <Button onClick={()=>this.routeToPJ4()} colored>GitHub</Button>\r\n                </CardActions>\r\n            </Card>\r\n\r\n            <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\r\n              <CardTitle><b>Application Deployment using Jenkins, Ansible, Tomcat</b></CardTitle>\r\n              <CardText style={{'text-align': 'justify'}}>\r\n              This project shows step by step process to deploy a Maven or Gradle Application in the Cloud (AWS etc) using Jenkins, Tomcat and Ansible Scripts.\r\n              <br></br>\r\n              <br></br>\r\n\r\n              <span class=\"label success\">Jenkins</span>\r\n              &nbsp;\r\n              <span class=\"label info\">Ansible</span>\r\n              &nbsp;\r\n              <span class=\"label danger\">Tomcat</span>\r\n              &nbsp;\r\n              <span class=\"label warning\">Cloud</span>\r\n              <br></br>\r\n              <br></br>\r\n              <span class=\"label info\">Maven</span>\r\n              </CardText>\r\n              <CardActions border>\r\n                <Button onClick={()=>this.routeToPJ5()} colored>GitHub</Button>\r\n                </CardActions>\r\n            </Card>\r\n\r\n            <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\r\n              <CardTitle><b>Most Frequent Hashtags on Social Media</b></CardTitle>\r\n              <CardText style={{'text-align': 'justify'}}>\r\n              This application finds the most frequent hashtags on Social Media like Twitter, Facebook. This application is capable of processing millions of tags in less than a sec.\r\n              <br></br>\r\n              <br></br>\r\n\r\n              <span class=\"label success\">Java</span>\r\n              &nbsp;\r\n              <span class=\"label info\">Fibonacci Heap</span>\r\n              &nbsp;\r\n              <span class=\"label warning\">Data Structures</span>\r\n              <br></br>\r\n              <br></br>\r\n              </CardText>\r\n\r\n              <CardActions border>\r\n                <Button onClick={()=>this.routeToPJ6()} colored>GitHub</Button>\r\n                </CardActions>\r\n            </Card>\r\n            </div>\r\n            </div>\r\n            <br></br>\r\n            <br></br>\r\n            <div class=\"row3\">\r\n            <div className=\"projects-grid\">\r\n              <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\r\n                <CardTitle ><b>Distributed Messaging Application using RabbitMQ and Golang</b></CardTitle>\r\n                <CardText style={{'text-align': 'justify'}}>\r\n                This is messaging application built using RabbitMQ as the message-broker. I made use of Golang language for the implementation.\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <span class=\"label success\">Golang</span>\r\n                &nbsp;\r\n                <span class=\"label info\">RabbitMQ</span>\r\n                &nbsp;\r\n                <span class=\"label danger\">Streaming</span>\r\n                &nbsp;\r\n                <br></br>\r\n                <br></br>\r\n                <span class=\"label info\">Distributed System</span>\r\n                </CardText>\r\n                <CardActions border>\r\n                  <Button onClick={()=>this.routeToPJ7()} colored>GitHub</Button>\r\n                  </CardActions>\r\n              </Card>\r\n                <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\r\n                  <CardTitle><b>Distributed System: Blockchain Bidding Application using Solidity</b></CardTitle>\r\n                  <CardText style={{'text-align': 'justify'}}>\r\n                  Implemented smart contracts using solidity language for a Blockchain Bidding application. Scaled the system to support multiple users.\r\n                  <br></br>\r\n                  <br></br>\r\n\r\n                  <span class=\"label success\">Solidity</span>\r\n                  &nbsp;\r\n                  <span class=\"label info\">Blockchain</span>\r\n                  &nbsp;\r\n                  <span class=\"label danger\">Smart Contracts</span>\r\n                  &nbsp;\r\n                  <br></br>\r\n                  <br></br>\r\n                  <span class=\"label info\">Distributed System</span>\r\n                  </CardText>\r\n                  <CardActions border>\r\n                    <Button onClick={()=>this.routeToPJ8()} colored>GitHub</Button>\r\n                    </CardActions>\r\n                </Card>\r\n                <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\r\n                  <CardTitle><b>Distributed System: Merger and Acquistion using Blockchain</b></CardTitle>\r\n                  <CardText style={{'text-align': 'justify'}}>\r\n                  This project is an implementation of the merger and acquisition process on a Blockchain Network using Solidity.\r\n                  <br></br>\r\n                  <br></br>\r\n\r\n                  <span class=\"label success\">Solidity</span>\r\n                  &nbsp;\r\n                  <span class=\"label info\">Blockchain</span>\r\n                  &nbsp;\r\n                  <span class=\"label danger\">Smart Contracts</span>\r\n                  &nbsp;\r\n                  <br></br>\r\n                  <br></br>\r\n                  <span class=\"label info\">Distributed System</span>\r\n                  </CardText>\r\n                  <CardActions border>\r\n                    <Button onClick={()=>this.routeToPJ9()} colored>GitHub</Button>\r\n                    </CardActions>\r\n                </Card>\r\n              </div>\r\n              </div>\r\n              </div>\r\n      )\r\n    } else if(this.state.activeTab === 1) {\r\n      return (\r\n        <div><h1>This is Angular</h1></div>\r\n      )\r\n    } else if(this.state.activeTab === 2) {\r\n      return (\r\n        <div><h1>This is VueJS</h1></div>\r\n      )\r\n    } else if(this.state.activeTab === 3) {\r\n      return (\r\n        <div><h1>This is MongoDB</h1></div>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <Tabs activeTab={this.state.activeTab} onChange={(tabId) => this.setState({ activeTab: tabId })} ripple>\r\n          <Tab>Projects</Tab>\r\n        </Tabs>\r\n\r\n\r\n          <Grid>\r\n            <Cell col={12}>\r\n              <div className=\"content\">{this.toggleCategories()}</div>\r\n            </Cell>\r\n          </Grid>\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n","import React, { Component } from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\n\r\nclass Education extends Component {\r\n  render() {\r\n    return(\r\n      <Grid>\r\n        <Cell col={4}>\r\n          <p>{this.props.startYear} - {this.props.endYear}</p>\r\n        </Cell>\r\n        <Cell col={8}>\r\n          <h4 style={{marginTop:'0px'}}>{this.props.schoolName}</h4>\r\n          <p>{this.props.schoolDescription}</p>\r\n        </Cell>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Education;\r\n","import React, { Component } from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\n\r\nclass Experience extends Component {\r\n  render() {\r\n    return(\r\n      <Grid>\r\n        <Cell col={4}>\r\n          <p>{this.props.startYear} - {this.props.endYear}</p>\r\n        </Cell>\r\n        <Cell col={8}>\r\n          <h4 style={{marginTop:'0px'}}>{this.props.jobName}</h4>\r\n          <p>{this.props.jobDescription}</p>\r\n        </Cell>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Experience;\r\n","import React, { Component } from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\nimport Education from './education';\r\nimport Experience from './experience';\r\nimport Skills from './skills';\r\n\r\n\r\nclass Resume extends Component {\r\n  render() {\r\n    return(\r\n      <div>\r\n        <Grid>\r\n          <Cell col={4}>\r\n            <div style={{textAlign: 'center'}}>\r\n              <img\r\n                src=\"https://cdn2.iconfinder.com/data/icons/avatar-2/512/Fred_man-512.png\"\r\n                alt=\"avatar\"\r\n                style={{height: '200px'}}\r\n                 />\r\n            </div>\r\n\r\n            <h2 style={{paddingTop: '2em'}}>Saurabh Anand</h2>\r\n            <h4 style={{color: 'grey'}}>Software Engineer </h4>\r\n            <hr style={{borderTop: '3px solid #833fb2', width: '68%'}}/>\r\n            <p><b>Key Highlights</b></p>\r\n            <br></br>\r\n            <p>\r\n            <b>\r\n* Expertise in Spring Boot, Spring Cloud, Netflix OSS frameworks to build complex Backend Applications using Java.\r\n<br></br>\r\n\r\n* Extensive experience in SQL (MySQL, PostgreSQL) and NoSQL databases like Apache Cassandra and MongoDB.\r\n<br></br>\r\n\r\n* Experience in Cloud Environment, Amazon Web Services (AWS).\r\n<br></br>\r\n* Expertise in Collection Framework, Executor Framework, Java 8 Lambda, and Streams.\r\n<br></br>\r\n* Worked in Agile Development Methodology such as JIRA etc.\r\n<br></br>\r\n* Well-versed in Computer Science Concepts - Algorithms, Data Structures, Object-Oriented Programming (OOP). Good Analytical and Problem-Solving skills.\r\n</b>\r\n</p>\r\n            <hr style={{borderTop: '3px solid #833fb2', width: '68%'}}/>\r\n            <h5>Address</h5>\r\n            <p>3800 SW 34 St, Gainesville, Florida, 32608</p>\r\n            <h5>Phone</h5>\r\n            <p>(352) 871-5669</p>\r\n            <h5>Email</h5>\r\n            <p>saurabh789789@gmail.com</p>\r\n            <h5>Web</h5>\r\n            <p>https://anand-saurabh.github.io/portfoliowebsite/</p>\r\n            <hr style={{borderTop: '3px solid #833fb2', width: '68%'}}/>\r\n          </Cell>\r\n          <Cell className=\"resume-right-col\" col={8}>\r\n            <h2>Education</h2>\r\n\r\n\r\n            <Education\r\n              startYear={2019}\r\n              endYear={2021}\r\n              schoolName=\"University of Florida (Gainesville, Florida)\"\r\n              schoolDescription=\"I am currently a computer science graduate masters student at University of Florida.\"\r\n               />\r\n\r\n               <Education\r\n                 startYear={2011}\r\n                 endYear={2015}\r\n                 schoolName=\"R.V. College of Engineering (Bangalore, India)\"\r\n                 schoolDescription=\"I completed my Bachelor's Degree in Information Science and Engineering from this university.\"\r\n                  />\r\n                <hr style={{borderTop: '3px solid #e22947'}} />\r\n\r\n              <h2>Experience</h2>\r\n\r\n            <Experience\r\n              startYear={2020}\r\n              endYear={2020}\r\n              jobName=\"Senior Software Engineer Intern, Visa Inc. (Austin, Texas)\"\r\n              jobDescription=\"I was a summer'2020 intern at Visa in the Digital and Developer platform team. During the internship, I played the role of a full-stack developer. I worked on the UI using Vue JS, JavaScript, Bootstrap, HTML, CSS, etc. For backend services, I used Golang, Gorilla Mux framework, Java, SpringBoot, etc.\r\n\r\nMajor Projects on which I worked:\r\n1) Created a mobile app using React Native and Spring Boot to enable contactless payments to support around 3 million small businesses in COVID times. Made use of Near Field Communication NFC and Visa token service.\r\n2)Developed a dashboard for the service discovery of different Visa services in different environments. Used Vue.js for UI and Golang Gorilla Mux Framework for developing REST services.\r\n3) Proposed a solution to reduce cash usage (approx 24%) in US by combining Visa merchant service and customer loyalty program for small merchants and customers.\"\r\n              />\r\n\r\n              <Experience\r\n                startYear={2016}\r\n                endYear={2019}\r\n                jobName=\"Senior Software Engineer, J.C. Penney (Bangalore, India)\"\r\n                jobDescription=\"I was working as a Senior Software Engineer in the Pricing and Promotion team of J.C. Penney with the main area of focus on Backend and Big Data application development. My day to day work involved building various REST services, developing Spring Batch jobs for data migration, implementing Spring Integration projects as well as the integration of various backend services with Databases such as Cassandra, PostgreSQL, etc. Also, a major part of my work involved writing scalable Big Data applications using Apache Spark.\r\n\r\nPrimary Projects on which I worked:\r\n1) Worked on building the first in-house Pricing Engine platform for J.C. Penney from scratch with major features such as real-time pricing, competitive pricing.\r\nUsed Spring Boot, Spring MVC for microservices, Hazelcast Caching.\r\n2) Wrote and Scaled Big Data Applications using Apache Spark and Cassandra. This reduced the data processing time\r\nfor approx. 10 million records from 4 hours to 25 minutes.\r\nDesigned and developed Promotion and Coupon system for J.C. Penneys entire .com site with the help of Neo4j Graph DB, PostgreSQL, Spring Boot, Batch Jobs. Coupons increased the order conversion by almost 4 percent.\r\n3) Built Pricing Notification System to process real-time price updates using AWS Kinesis and ZooKeeper.\"\r\n                />\r\n\r\n\r\n                              <Experience\r\n                                startYear={2015}\r\n                                endYear={2016}\r\n                                jobName=\"Software Engineer, Snapdeal (Bangalore, India)\"\r\n                                jobDescription=\"I was working as a Software Engineer in the Reviews and Rating (RnR) and Question and Answer(QnA) team of Snapdeal. My day to day work involved building features for my team using Java, REST framework, Spring MVC, Spring Boot, etc. Also, a major part of the work involved working with SQL (MySQL etc) as well as NoSQL databases like Cassandra, etc.\r\n\r\nPrimarily I worked on:\r\n1) Implemented Search QnA feature for a product using Elasticsearch. This feature supports fuzzy and natural language search. Employed Aggregations, Custom Analyzers, Indexing, and Stemming in Elasticsearch.\r\n2) Built a platform that supported submission and moderation of reviews and rating RnR and QnA for a product by customers.\r\nMade use of Spring, Java, Cassandra, MongoDB, and Redis caching.\r\n3) Project Selfie: Take a Selfie with the product you buy from Snapdeal and post on Snapdeal along with its review. Java along with Spring framework was used for backend microservices and Cassandra as a data store.\"\r\n                                />\r\n              <hr style={{borderTop: '3px solid #e22947'}} />\r\n              <h2>Technical Skills</h2>\r\n              <b>Programming Skills: </b>Java, Golang, Python, C++, C, Solidity\r\n              <br></br>\r\n              <br></br>\r\n\r\n<b>Frameworks/ Tools</b>: Spring MVC, Spring Boot, REST, SOAP, Gorilla Mux, Django, Spring Batch, Spring Integration, Splunk, Junit, Mockito, JIRA, GIT, Agile, Maven, Gradle, Ansible, Jenkins, Docker, ZooKeeper, Netflix OSS\r\n<br></br>\r\n<br></br>\r\n\r\n<b>Databases:</b> Cassandra, MongoDB, MySQL, PostgreSQL, Oracle, Neo4j Graph Database\r\n<br></br>\r\n<br></br>\r\n\r\n<b>Streaming/Search/Big Data/Caching:</b> AWS Kinesis, Kafka, Elasticsearch, Apache Spark, Redis, Hazelcast\r\n<br></br>\r\n<br></br>\r\n\r\n<b>Web Technologies:</b> JavaScript, React JS, Vue JS, Bootstrap, Web3 JS, PHP, Html, CSS\r\n<br></br>\r\n<br></br>\r\n\r\n<b>Operating Systems:</b> Mac, Windows, Unix\r\n\r\n          </Cell>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Resume;\r\n","import React, { Component } from 'react';\r\nimport { Grid, Cell, ProgressBar } from 'react-mdl';\r\n\r\nclass Skills extends Component {\r\n  render() {\r\n    return(\r\n      <Grid>\r\n        <Cell col={4}>\r\n          <div style={{display: 'flex'}}>{this.props.skill} </div>\r\n        </Cell>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Skills;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport LandingPage from './landingpage';\r\nimport AboutMe from './aboutme';\r\nimport Contact from './contact';\r\nimport Projects from './projects';\r\nimport Resume from './resume';\r\n\r\n\r\nconst Main = () => (\r\n  <Switch>\r\n    <Route exact path=\"/portfoliowebsite\" component={LandingPage} />\r\n    <Route path=\"/portfoliowebsite/aboutme\" component={AboutMe} />\r\n    <Route path=\"/portfoliowebsite/contact\" component={Contact} />\r\n    <Route path=\"/portfoliowebsite/projects\" component={Projects} />\r\n    <Route path=\"/portfoliowebsite/resume\" component={Resume} />\r\n  </Switch>\r\n)\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Navigation, Layout, Header, Drawer, Content} from 'react-mdl';\r\nimport Main from './components/main';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"demo-big-content\">\r\n        <Layout>\r\n            <Header className=\"header-color\" title=\"Saurabh Anand\">\r\n                <Navigation>\r\n                    <Link to=\"/portfoliowebsite/resume\">Resume</Link>\r\n                    <Link to=\"/portfoliowebsite/projects\">Projects</Link>\r\n                    <Link to=\"/portfoliowebsite/contact\">Contact</Link>\r\n                    <Link to=\"/portfoliowebsite\">Home</Link>\r\n                </Navigation>\r\n            </Header>\r\n            <Drawer title=\"Quick Link\">\r\n                <Navigation>\r\n                <Link to=\"/portfoliowebsite/resume\">Resume</Link>\r\n                <Link to=\"/portfoliowebsite/projects\">Projects</Link>\r\n                <Link to=\"/portfoliowebsite/contact\">Contact</Link>\r\n                </Navigation>\r\n            </Drawer>\r\n            <Content>\r\n                <div className=\"page-content\" />\r\n                <Main/>\r\n            </Content>\r\n        </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'react-mdl/extra/material.css';\r\nimport 'react-mdl/extra/material.js';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}